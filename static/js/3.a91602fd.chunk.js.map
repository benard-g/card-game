{"version":3,"sources":["pages/LobbyPage/LobbyJoinPage/component.tsx","hooks/useQueryParams.ts","pages/LobbyPage/LobbyViewPage/component.tsx","pages/LobbyPage/routes.tsx"],"names":["LobbyJoinPage","history","useHistory","lobbyCode","location","useLocation","URLSearchParams","search","useQueryParams","get","useLobbyJoinPageQuery","fetchPolicy","variables","lobbyId","data","loading","error","useJoinLobbyMutation","joinLobbyMutation","joinLobbyMutationLoading","joinLobbyMutationError","useLeaveLobbyMutation","leaveLobbyMutation","leaveLobbyMutationLoading","leaveLobbyMutationError","mutationLoading","mutationError","Loader","GraphqlError","lobbyPreview","viewer","to","isViewerInALobby","lobby","id","onJoinLobby","a","input","userName","push","nbMembers","disabled","onClick","message","LobbyPage","useLobbyPageQuery","onCopyInviteLink","isHashRouter","window","hash","baseUrl","origin","inviteLink","navigator","clipboard","writeText","onLeaveLobby","members","map","member","name","role","LobbyRoutes","path","useRouteMatch","exact"],"mappings":"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","file":"static/js/3.a91602fd.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nimport GraphqlError from '../../../components/GraphqlError';\nimport Loader from '../../../components/Loader';\nimport {\n  useJoinLobbyMutation,\n  useLeaveLobbyMutation,\n  useLobbyJoinPageQuery,\n} from '../../../graphql/codegen';\nimport { useQueryParams } from '../../../hooks/useQueryParams';\n\nconst LobbyJoinPage: FC = () => {\n  const history = useHistory();\n  const params = useQueryParams();\n  const lobbyCode = params.get('c');\n\n  const { data, loading, error } = useLobbyJoinPageQuery({\n    fetchPolicy: 'cache-and-network',\n    variables: { lobbyId: lobbyCode || '' },\n  });\n  const [\n    joinLobbyMutation,\n    { loading: joinLobbyMutationLoading, error: joinLobbyMutationError },\n  ] = useJoinLobbyMutation();\n  const [\n    leaveLobbyMutation,\n    { loading: leaveLobbyMutationLoading, error: leaveLobbyMutationError },\n  ] = useLeaveLobbyMutation();\n  const mutationLoading = joinLobbyMutationLoading || leaveLobbyMutationLoading;\n  const mutationError = joinLobbyMutationError || leaveLobbyMutationError;\n\n  if (loading) {\n    return <Loader />;\n  }\n  if (error || !data) {\n    return <GraphqlError error={error} />;\n  }\n\n  const { lobbyPreview, viewer } = data;\n  if (!lobbyPreview) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const isViewerInALobby = !!viewer.lobby;\n  const isViewerAlreadyInThisLobby = viewer.lobby?.id === lobbyPreview.id;\n  if (isViewerAlreadyInThisLobby) {\n    return <Redirect to=\"/lobby\" />;\n  }\n\n  const onJoinLobby = async () => {\n    try {\n      if (isViewerInALobby) {\n        await leaveLobbyMutation();\n      }\n      await joinLobbyMutation({\n        variables: {\n          input: {\n            lobbyId: lobbyPreview.id,\n            userName: 'Bob',\n          },\n        },\n      });\n      history.push('/lobby');\n    } catch (_err) {} // Error is handled by component\n  };\n\n  return (\n    <div>\n      <p>Lobby</p>\n\n      <br />\n      <p>Lobby ID: {lobbyPreview.id}</p>\n      <p>Nb members: {lobbyPreview.nbMembers}</p>\n\n      <br />\n      <p>TODO: choose your avatar</p>\n      <p>TODO: choose your name</p>\n\n      <br />\n      <button disabled={mutationLoading} onClick={onJoinLobby}>\n        Join Lobby\n      </button>\n      {!mutationError ? null : <p>{mutationError.message}</p>}\n    </div>\n  );\n};\n\nexport default LobbyJoinPage;\n","import { useLocation } from 'react-router-dom';\n\nexport function useQueryParams() {\n  const location = useLocation();\n\n  return new URLSearchParams(location.search);\n}\n","import React, { FC } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport GraphqlError from '../../../components/GraphqlError';\nimport Loader from '../../../components/Loader';\nimport {\n  useLeaveLobbyMutation,\n  useLobbyPageQuery,\n} from '../../../graphql/codegen';\n\nconst LobbyPage: FC = () => {\n  const { data, loading, error } = useLobbyPageQuery();\n  const [\n    leaveLobbyMutation,\n    { loading: leaveLobbyMutationLoading },\n  ] = useLeaveLobbyMutation();\n\n  if (loading) {\n    return <Loader />;\n  }\n  if (error || !data) {\n    return <GraphqlError error={error} />;\n  }\n\n  const { viewer } = data;\n  const { lobby } = viewer;\n\n  if (!lobby) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const onCopyInviteLink = async () => {\n    // We need to detect the kind of Router used for the navigation in order\n    // to generate a valid invitation link\n    const isHashRouter = !!window.location.hash;\n    const baseUrl = `${window.location.origin}${isHashRouter ? '/#' : ''}`;\n    const inviteLink = `${baseUrl}/lobby/join?c=${lobby.id}`;\n\n    await navigator.clipboard.writeText(inviteLink);\n  };\n\n  const onLeaveLobby = async () => {\n    await leaveLobbyMutation();\n  };\n\n  return (\n    <div>\n      <p>Lobby Page</p>\n\n      <br />\n\n      <p>ID: {lobby.id}</p>\n      <button onClick={onCopyInviteLink}>Copy invite link</button>\n\n      <br />\n      <br />\n      <br />\n\n      <ul>\n        {lobby.members.map((member) => (\n          <li key={member.id}>\n            <p>ID: {member.id}</p>\n            <p>Name: {member.name}</p>\n            <p>Role: {member.role}</p>\n            <br />\n          </li>\n        ))}\n      </ul>\n\n      <br />\n      <button disabled={leaveLobbyMutationLoading} onClick={onLeaveLobby}>\n        Leave lobby\n      </button>\n    </div>\n  );\n};\n\nexport default LobbyPage;\n","import React, { FC } from 'react';\nimport { Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\n\nimport LobbyJoinPage from './LobbyJoinPage';\nimport LobbyViewPage from './LobbyViewPage';\n\nconst LobbyRoutes: FC = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route exact path={`${path}`}>\n        <LobbyViewPage />\n      </Route>\n\n      <Route path={`${path}/join`}>\n        <LobbyJoinPage />\n      </Route>\n\n      <Route path=\"*\">\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default LobbyRoutes;\n"],"sourceRoot":""}