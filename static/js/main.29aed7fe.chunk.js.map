{"version":3,"sources":["../../../src/ErrorCode.ts","config/config.ts","hooks/ApiAuthentication/hook.tsx","styles/themes.tsx","hooks/ApplicationTheme/hook.tsx","hooks/i18next/hook.tsx","services/graphql/GraphqlClient.tsx","App/hook.ts","pages/Home/component.tsx","App/Routes/component.tsx","App/styles.tsx","App/component.tsx","App/container.tsx","index.tsx","components/Loader/component.tsx","services/graphql/generated.tsx","components/GraphqlError/component.tsx","components/GraphqlError/utils/mapErrorCode.ts","../../../src/index.ts"],"names":["config","process","API_AUTH_CONTEXT","createContext","undefined","a","authUri","fetch","method","credentials","ApiAuthProvider","props","children","useState","isAuthenticated","setIsAuthenticated","loading","setLoading","error","setError","useEffect","authenticate","then","response","ok","Error","catch","err","finally","Provider","value","themes","classic","colors","background","spacings","abs4","abs8","abs12","abs16","abs24","abs32","abs48","themeContext","ApplicationThemeProvider","defaultTheme","themeName","setThemeName","theme","name","I18NEXT_CONTEXT","I18nextProvider","fallbackLanguage","languages","ready","setReady","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","whitelist","react","wait","debug","returnEmptyString","returnObjects","apolloClient","ApolloClient","uri","cache","InMemoryCache","connectToDevTools","GraphqlClient","client","useAppReady","context","useContext","useApiAuth","apiAuthLoading","apiAuthError","useI18nextConfig","i18nLoading","i18nError","HomePage","t","useTranslation","useHomePageQuery","data","uid","viewer","id","lobby","Loader","GraphqlError","to","LobbyPage","lazy","LazyRoute","fallback","Routes","exact","path","Root","styled","div","App","ReactDOM","render","StrictMode","document","getElementById","HomePageDocument","gql","baseOptions","Apollo","CreateLobbyPageDocument","useCreateLobbyPageQuery","CreateLobbyPage_CreateLobbyDocument","useCreateLobbyPage_CreateLobbyMutation","ViewLobbyPageDocument","useViewLobbyPageQuery","ViewLobbyPage_LeaveLobbyDocument","useViewLobbyPage_LeaveLobbyMutation","GraphQLError","errorMessage","extensions","code","ErrorCode","USER_ALREADY_IN_LOBBY","mapErrorCode"],"mappings":"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","file":"static/js/main.29aed7fe.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorCode = void 0;\nvar ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[\"USER_ALREADY_IN_LOBBY\"] = \"USER_ALREADY_IN_LOBBY\";\n})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));\n//# sourceMappingURL=ErrorCode.js.map","function getNodeEnv() {\n  switch (process.env.NODE_ENV) {\n    case 'production':\n      return 'production';\n    case 'test':\n      return 'test';\n    default:\n      return 'development';\n  }\n}\n\nexport const config = {\n  API_URI: process.env.REACT_APP_API_URI || 'http://localhost:8080',\n  NODE_ENV: getNodeEnv(),\n} as const;\n","import React, {\n  createContext,\n  FC,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { config } from '../../config';\n\n//\n// Context\n//\ninterface Context {\n  loading: boolean;\n  error?: Error;\n}\n\nconst API_AUTH_CONTEXT = createContext<Context | undefined>(undefined);\n\n//\n// Provider\n//\nasync function authenticate() {\n  const authUri = `${config.API_URI}/api/auth/authenticate`;\n  return fetch(authUri, { method: 'POST', credentials: 'include' });\n}\n\nexport const ApiAuthProvider: FC = (props) => {\n  const { children } = props;\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<Error | undefined>(undefined);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      return;\n    }\n\n    authenticate()\n      .then((response) => {\n        if (!response.ok) {\n          setError(new Error('Auth failed'));\n          return;\n        }\n        setIsAuthenticated(true);\n      })\n      .catch((err) => {\n        setError(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [isAuthenticated, loading]);\n\n  return (\n    <API_AUTH_CONTEXT.Provider value={{ loading, error }}>\n      {children}\n    </API_AUTH_CONTEXT.Provider>\n  );\n};\n\n//\n// Hook\n//\ninterface HookResponse {\n  loading: boolean;\n  error?: Error;\n}\n\nexport function useApiAuth(): HookResponse {\n  const context = useContext(API_AUTH_CONTEXT);\n  if (!context) {\n    throw new Error('Missing wrapping ApiAuthProvider');\n  }\n\n  const { loading, error } = context;\n\n  return {\n    loading,\n    error,\n  };\n}\n","import { DefaultTheme } from 'styled-components';\n\ninterface Colors {\n  background: string;\n}\n\nconst spacings = {\n  abs4: '4px',\n  abs8: '8px',\n  abs12: '12px',\n  abs16: '16px',\n  abs24: '24px',\n  abs32: '32px',\n  abs48: '48px',\n} as const;\ntype Spacings = typeof spacings;\n\n// Override DefaultTheme types to provide nice typings in templates\ndeclare module 'styled-components' {\n  export interface DefaultTheme {\n    colors: Colors;\n    spacings: Spacings;\n  }\n}\n\nconst themeClassic: DefaultTheme = {\n  colors: {\n    background: 'lightblue',\n  },\n  spacings,\n};\n\nexport const themes = {\n  classic: themeClassic,\n};\n\nexport type ThemeKey = keyof typeof themes;\n","import React, { createContext, FC, useContext, useState } from 'react';\nimport { DefaultTheme, ThemeProvider } from 'styled-components';\n\nimport { ThemeKey, themes } from '../../styles/themes';\n\n//\n// Theme context\n//\ntype ThemeContext = [\n  { name: ThemeKey; theme: DefaultTheme },\n  (themeKey: ThemeKey) => void,\n];\n\nconst themeContext = createContext<ThemeContext | undefined>(undefined);\n\n//\n// Theme provider\n//\ninterface ProviderProps {\n  defaultTheme: ThemeKey;\n}\n\nexport const ApplicationThemeProvider: FC<ProviderProps> = (props) => {\n  const { defaultTheme, children } = props;\n\n  const [themeName, setThemeName] = useState<ThemeKey>(defaultTheme);\n  const theme = themes[themeName];\n\n  return (\n    <themeContext.Provider value={[{ name: themeName, theme }, setThemeName]}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </themeContext.Provider>\n  );\n};\n\n//\n// Theme consumer\n//\nexport function useApplicationTheme(): ThemeContext {\n  const applicationTheme = useContext(themeContext);\n  if (!applicationTheme) {\n    throw new Error('Missing wrapping ApplicationThemeProvider');\n  }\n\n  return applicationTheme;\n}\n","import React, {\n  createContext,\n  FC,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { initReactI18next } from 'react-i18next';\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\n\n//\n// Context\n//\ninterface Context {\n  loading: boolean;\n  error?: Error;\n  languages: string[];\n}\n\nconst I18NEXT_CONTEXT = createContext<Context | undefined>(undefined);\n\n//\n// Provider\n//\ninterface ProviderProps {\n  fallbackLanguage: string;\n  languages: string[];\n}\n\nexport const I18nextProvider: FC<ProviderProps> = (props) => {\n  const { children, fallbackLanguage, languages } = props;\n\n  const [loading, setLoading] = useState(true);\n  const [ready, setReady] = useState(false);\n  const [error, setError] = useState<Error | undefined>(undefined);\n\n  useEffect(() => {\n    if (ready) {\n      return;\n    }\n\n    i18n\n      .use(Backend)\n      .use(LanguageDetector)\n      .use(initReactI18next)\n      .init({\n        fallbackLng: fallbackLanguage,\n        whitelist: languages,\n        react: { wait: true },\n        debug: false,\n        returnEmptyString: false,\n        returnObjects: true,\n      })\n      .then(() => {\n        setReady(true);\n      })\n      .catch((err) => {\n        setError(err);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [loading, ready, fallbackLanguage, languages]);\n\n  return (\n    <I18NEXT_CONTEXT.Provider value={{ loading, error, languages }}>\n      {children}\n    </I18NEXT_CONTEXT.Provider>\n  );\n};\n\n//\n// Hook\n//\ninterface HookResponse {\n  loading: boolean;\n  error?: Error;\n  languages: string[];\n}\n\nexport function useI18nextConfig(): HookResponse {\n  const context = useContext(I18NEXT_CONTEXT);\n  if (!context) {\n    throw new Error('Missing wrapping I18nextProvider');\n  }\n\n  const { loading, error, languages } = context;\n\n  return {\n    loading,\n    error,\n    languages,\n  };\n}\n","import React, { FC } from 'react';\nimport { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\n\nimport { config } from '../../config';\n\nconst apolloClient = new ApolloClient({\n  uri: `${config.API_URI}/api/graphql`,\n  cache: new InMemoryCache(),\n  credentials: 'include',\n  connectToDevTools: config.NODE_ENV === 'development',\n});\n\nconst GraphqlClient: FC = (props) => {\n  const { children } = props;\n\n  return <ApolloProvider client={apolloClient}>{children}</ApolloProvider>;\n};\n\nexport default GraphqlClient;\n","import { useApiAuth } from '../hooks/ApiAuthentication';\nimport { useI18nextConfig } from '../hooks/i18next/hook';\n\ninterface HookResponse {\n  loading: boolean;\n  error?: Error;\n}\n\nexport function useAppReady(): HookResponse {\n  const { loading: apiAuthLoading, error: apiAuthError } = useApiAuth();\n  const { loading: i18nLoading, error: i18nError } = useI18nextConfig();\n\n  const loading = apiAuthLoading || i18nLoading;\n  const error = apiAuthError || i18nError;\n\n  return { loading, error };\n}\n","import React, { FC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nimport GraphqlError from '../../components/GraphqlError';\nimport Loader from '../../components/Loader';\nimport { useHomePageQuery } from '../../services/graphql/generated';\n\nconst HomePage: FC = () => {\n  const { t } = useTranslation();\n\n  const { data, loading, error } = useHomePageQuery();\n  const uid = data?.viewer.id;\n  const lobby = data?.viewer.lobby;\n\n  if (loading) {\n    return <Loader />;\n  }\n  if (error || !data) {\n    return <GraphqlError error={error} />;\n  }\n\n  return (\n    <div>\n      <h1>{t('pages.Home.title')}</h1>\n      <p>uid: {uid}</p>\n\n      <br />\n      <br />\n      <br />\n\n      {!!lobby ? (\n        <div>\n          <p>You are in lobby: {lobby.id}</p>\n          <Link to={`/lobbies/${lobby.id}`}>Go to lobby</Link>\n        </div>\n      ) : (\n        <div>\n          <p>You are not part of a lobby</p>\n          <Link to=\"lobbies/create\">Create lobby</Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React, { FC, lazy, Suspense } from 'react';\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  RouteProps,\n  Switch,\n} from 'react-router-dom';\n\nimport Loader from '../../components/Loader';\nimport HomePage from '../../pages/Home';\n\nconst LobbyPage = lazy(() => import('../../pages/Lobby'));\n\nconst LazyRoute: FC<RouteProps> = ({ children, ...props }) => {\n  return (\n    <Route {...props}>\n      <Suspense fallback={<Loader />}>{children}</Suspense>\n    </Route>\n  );\n};\n\nconst Routes: FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n\n        <LazyRoute path=\"/lobbies\">\n          <LobbyPage />\n        </LazyRoute>\n\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import styled from 'styled-components';\n\nexport const Root = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n\n  background-color: ${({ theme }) => theme.colors.background};\n`;\n","import React, { FC } from 'react';\n\nimport Loader from '../components/Loader';\n\nimport { useAppReady } from './hook';\nimport Routes from './Routes';\nimport { Root } from './styles';\n\nconst App: FC = () => {\n  const { loading, error } = useAppReady();\n\n  if (loading) {\n    return (\n      <Root>\n        <Loader />\n      </Root>\n    );\n  }\n  if (error) {\n    return (\n      <Root>\n        <p>An error occurred while loading the app.</p>\n      </Root>\n    );\n  }\n\n  return (\n    <Root>\n      <Routes />\n    </Root>\n  );\n};\n\nexport default App;\n","import React, { FC } from 'react';\nimport { HelmetProvider } from 'react-helmet-async';\n\nimport { ApiAuthProvider } from '../hooks/ApiAuthentication';\nimport { ApplicationThemeProvider } from '../hooks/ApplicationTheme';\nimport { I18nextProvider } from '../hooks/i18next';\nimport GraphqlClient from '../services/graphql/GraphqlClient';\n\nimport AppComponent from './component';\n\nconst App: FC = () => {\n  return (\n    <HelmetProvider>\n      <GraphqlClient>\n        <ApplicationThemeProvider defaultTheme=\"classic\">\n          <I18nextProvider languages={['en', 'fr']} fallbackLanguage=\"en\">\n            <ApiAuthProvider>\n              <AppComponent />\n            </ApiAuthProvider>\n          </I18nextProvider>\n        </ApplicationThemeProvider>\n      </GraphqlClient>\n    </HelmetProvider>\n  );\n};\n\nexport default App;\n","import 'reset-css';\nimport './styles/global.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import React, { FC } from 'react';\n\nconst Loader: FC = () => {\n  return <p>Loading...</p>;\n};\n\nexport default Loader;\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type Lobby = {\n  __typename?: 'Lobby';\n  id: Scalars['ID'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createLobby: Viewer;\n  leaveLobby: Viewer;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  viewer: Viewer;\n};\n\nexport type Viewer = {\n  __typename?: 'Viewer';\n  id: Scalars['ID'];\n  lobby?: Maybe<Lobby>;\n};\n\nexport type HomePageQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type HomePageQuery = (\n  { __typename?: 'Query' }\n  & { viewer: (\n    { __typename?: 'Viewer' }\n    & Pick<Viewer, 'id'>\n    & { lobby?: Maybe<(\n      { __typename?: 'Lobby' }\n      & Pick<Lobby, 'id'>\n    )> }\n  ) }\n);\n\nexport type CreateLobbyPageQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type CreateLobbyPageQuery = (\n  { __typename?: 'Query' }\n  & { viewer: (\n    { __typename?: 'Viewer' }\n    & Pick<Viewer, 'id'>\n    & { lobby?: Maybe<(\n      { __typename?: 'Lobby' }\n      & Pick<Lobby, 'id'>\n    )> }\n  ) }\n);\n\nexport type CreateLobbyPage_CreateLobbyMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type CreateLobbyPage_CreateLobbyMutation = (\n  { __typename?: 'Mutation' }\n  & { createLobby: (\n    { __typename?: 'Viewer' }\n    & Pick<Viewer, 'id'>\n    & { lobby?: Maybe<(\n      { __typename?: 'Lobby' }\n      & Pick<Lobby, 'id'>\n    )> }\n  ) }\n);\n\nexport type ViewLobbyPageQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ViewLobbyPageQuery = (\n  { __typename?: 'Query' }\n  & { viewer: (\n    { __typename?: 'Viewer' }\n    & Pick<Viewer, 'id'>\n    & { lobby?: Maybe<(\n      { __typename?: 'Lobby' }\n      & Pick<Lobby, 'id'>\n    )> }\n  ) }\n);\n\nexport type ViewLobbyPage_LeaveLobbyMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type ViewLobbyPage_LeaveLobbyMutation = (\n  { __typename?: 'Mutation' }\n  & { leaveLobby: (\n    { __typename?: 'Viewer' }\n    & Pick<Viewer, 'id'>\n    & { lobby?: Maybe<(\n      { __typename?: 'Lobby' }\n      & Pick<Lobby, 'id'>\n    )> }\n  ) }\n);\n\n\nexport const HomePageDocument = gql`\n    query HomePage {\n  viewer {\n    id\n    lobby {\n      id\n    }\n  }\n}\n    `;\n\n/**\n * __useHomePageQuery__\n *\n * To run a query within a React component, call `useHomePageQuery` and pass it any options that fit your needs.\n * When your component renders, `useHomePageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useHomePageQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useHomePageQuery(baseOptions?: Apollo.QueryHookOptions<HomePageQuery, HomePageQueryVariables>) {\n        return Apollo.useQuery<HomePageQuery, HomePageQueryVariables>(HomePageDocument, baseOptions);\n      }\nexport function useHomePageLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<HomePageQuery, HomePageQueryVariables>) {\n          return Apollo.useLazyQuery<HomePageQuery, HomePageQueryVariables>(HomePageDocument, baseOptions);\n        }\nexport type HomePageQueryHookResult = ReturnType<typeof useHomePageQuery>;\nexport type HomePageLazyQueryHookResult = ReturnType<typeof useHomePageLazyQuery>;\nexport type HomePageQueryResult = Apollo.QueryResult<HomePageQuery, HomePageQueryVariables>;\nexport const CreateLobbyPageDocument = gql`\n    query CreateLobbyPage {\n  viewer {\n    id\n    lobby {\n      id\n    }\n  }\n}\n    `;\n\n/**\n * __useCreateLobbyPageQuery__\n *\n * To run a query within a React component, call `useCreateLobbyPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useCreateLobbyPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCreateLobbyPageQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCreateLobbyPageQuery(baseOptions?: Apollo.QueryHookOptions<CreateLobbyPageQuery, CreateLobbyPageQueryVariables>) {\n        return Apollo.useQuery<CreateLobbyPageQuery, CreateLobbyPageQueryVariables>(CreateLobbyPageDocument, baseOptions);\n      }\nexport function useCreateLobbyPageLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<CreateLobbyPageQuery, CreateLobbyPageQueryVariables>) {\n          return Apollo.useLazyQuery<CreateLobbyPageQuery, CreateLobbyPageQueryVariables>(CreateLobbyPageDocument, baseOptions);\n        }\nexport type CreateLobbyPageQueryHookResult = ReturnType<typeof useCreateLobbyPageQuery>;\nexport type CreateLobbyPageLazyQueryHookResult = ReturnType<typeof useCreateLobbyPageLazyQuery>;\nexport type CreateLobbyPageQueryResult = Apollo.QueryResult<CreateLobbyPageQuery, CreateLobbyPageQueryVariables>;\nexport const CreateLobbyPage_CreateLobbyDocument = gql`\n    mutation CreateLobbyPage_CreateLobby {\n  createLobby {\n    id\n    lobby {\n      id\n    }\n  }\n}\n    `;\nexport type CreateLobbyPage_CreateLobbyMutationFn = Apollo.MutationFunction<CreateLobbyPage_CreateLobbyMutation, CreateLobbyPage_CreateLobbyMutationVariables>;\n\n/**\n * __useCreateLobbyPage_CreateLobbyMutation__\n *\n * To run a mutation, you first call `useCreateLobbyPage_CreateLobbyMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateLobbyPage_CreateLobbyMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createLobbyPageCreateLobbyMutation, { data, loading, error }] = useCreateLobbyPage_CreateLobbyMutation({\n *   variables: {\n *   },\n * });\n */\nexport function useCreateLobbyPage_CreateLobbyMutation(baseOptions?: Apollo.MutationHookOptions<CreateLobbyPage_CreateLobbyMutation, CreateLobbyPage_CreateLobbyMutationVariables>) {\n        return Apollo.useMutation<CreateLobbyPage_CreateLobbyMutation, CreateLobbyPage_CreateLobbyMutationVariables>(CreateLobbyPage_CreateLobbyDocument, baseOptions);\n      }\nexport type CreateLobbyPage_CreateLobbyMutationHookResult = ReturnType<typeof useCreateLobbyPage_CreateLobbyMutation>;\nexport type CreateLobbyPage_CreateLobbyMutationResult = Apollo.MutationResult<CreateLobbyPage_CreateLobbyMutation>;\nexport type CreateLobbyPage_CreateLobbyMutationOptions = Apollo.BaseMutationOptions<CreateLobbyPage_CreateLobbyMutation, CreateLobbyPage_CreateLobbyMutationVariables>;\nexport const ViewLobbyPageDocument = gql`\n    query ViewLobbyPage {\n  viewer {\n    id\n    lobby {\n      id\n    }\n  }\n}\n    `;\n\n/**\n * __useViewLobbyPageQuery__\n *\n * To run a query within a React component, call `useViewLobbyPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useViewLobbyPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useViewLobbyPageQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useViewLobbyPageQuery(baseOptions?: Apollo.QueryHookOptions<ViewLobbyPageQuery, ViewLobbyPageQueryVariables>) {\n        return Apollo.useQuery<ViewLobbyPageQuery, ViewLobbyPageQueryVariables>(ViewLobbyPageDocument, baseOptions);\n      }\nexport function useViewLobbyPageLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<ViewLobbyPageQuery, ViewLobbyPageQueryVariables>) {\n          return Apollo.useLazyQuery<ViewLobbyPageQuery, ViewLobbyPageQueryVariables>(ViewLobbyPageDocument, baseOptions);\n        }\nexport type ViewLobbyPageQueryHookResult = ReturnType<typeof useViewLobbyPageQuery>;\nexport type ViewLobbyPageLazyQueryHookResult = ReturnType<typeof useViewLobbyPageLazyQuery>;\nexport type ViewLobbyPageQueryResult = Apollo.QueryResult<ViewLobbyPageQuery, ViewLobbyPageQueryVariables>;\nexport const ViewLobbyPage_LeaveLobbyDocument = gql`\n    mutation ViewLobbyPage_LeaveLobby {\n  leaveLobby {\n    id\n    lobby {\n      id\n    }\n  }\n}\n    `;\nexport type ViewLobbyPage_LeaveLobbyMutationFn = Apollo.MutationFunction<ViewLobbyPage_LeaveLobbyMutation, ViewLobbyPage_LeaveLobbyMutationVariables>;\n\n/**\n * __useViewLobbyPage_LeaveLobbyMutation__\n *\n * To run a mutation, you first call `useViewLobbyPage_LeaveLobbyMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useViewLobbyPage_LeaveLobbyMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [viewLobbyPageLeaveLobbyMutation, { data, loading, error }] = useViewLobbyPage_LeaveLobbyMutation({\n *   variables: {\n *   },\n * });\n */\nexport function useViewLobbyPage_LeaveLobbyMutation(baseOptions?: Apollo.MutationHookOptions<ViewLobbyPage_LeaveLobbyMutation, ViewLobbyPage_LeaveLobbyMutationVariables>) {\n        return Apollo.useMutation<ViewLobbyPage_LeaveLobbyMutation, ViewLobbyPage_LeaveLobbyMutationVariables>(ViewLobbyPage_LeaveLobbyDocument, baseOptions);\n      }\nexport type ViewLobbyPage_LeaveLobbyMutationHookResult = ReturnType<typeof useViewLobbyPage_LeaveLobbyMutation>;\nexport type ViewLobbyPage_LeaveLobbyMutationResult = Apollo.MutationResult<ViewLobbyPage_LeaveLobbyMutation>;\nexport type ViewLobbyPage_LeaveLobbyMutationOptions = Apollo.BaseMutationOptions<ViewLobbyPage_LeaveLobbyMutation, ViewLobbyPage_LeaveLobbyMutationVariables>;\nexport const namedOperations = {\n  Query: {\n    HomePage: 'HomePage',\n    CreateLobbyPage: 'CreateLobbyPage',\n    ViewLobbyPage: 'ViewLobbyPage'\n  },\n  Mutation: {\n    CreateLobbyPage_CreateLobby: 'CreateLobbyPage_CreateLobby',\n    ViewLobbyPage_LeaveLobby: 'ViewLobbyPage_LeaveLobby'\n  }\n}","import React, { FC } from 'react';\nimport { GraphQLError } from 'graphql';\n\nimport { mapErrorCode } from './utils/mapErrorCode';\n\ninterface Props {\n  error?: GraphQLError | Error;\n}\n\nconst GraphqlError: FC<Props> = (props) => {\n  const { error } = props;\n\n  if (error instanceof GraphQLError) {\n    const errorMessage = mapErrorCode(error);\n    if (errorMessage) {\n      return <p>Error: {errorMessage}</p>;\n    }\n  }\n\n  return <p>Error: The operation failed.</p>;\n};\n\nexport default GraphqlError;\n","import { ErrorCode } from '@packages/lib-shared';\nimport { GraphQLError } from 'graphql';\n\nexport function mapErrorCode(error: GraphQLError): string | undefined {\n  const errorCode = error.extensions?.code as ErrorCode | undefined;\n\n  switch (errorCode) {\n    case ErrorCode.USER_ALREADY_IN_LOBBY:\n      return 'User already in lobby';\n    default:\n      return undefined;\n  }\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ErrorCode\"), exports);\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}