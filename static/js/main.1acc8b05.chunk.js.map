{"version":3,"sources":["../../../src/ErrorCode.ts","config/config.ts","graphql/codegenPossibleTypes.tsx","graphql/GraphqlApiProvider.tsx","hooks/ApiAuthentication/utils.ts","hooks/ApiAuthentication/hook.tsx","styles/themes.tsx","hooks/ApplicationTheme/hook.tsx","hooks/i18next/hook.tsx","App/hooks.tsx","pages/HomePage/components/CreateLobby/component.tsx","pages/HomePage/components/GoToLobby/component.tsx","pages/HomePage/styles.tsx","pages/HomePage/component.tsx","App/routes.tsx","App/styles.tsx","App/component.tsx","App/container.tsx","index.tsx","components/Loader/component.tsx","graphql/codegen.tsx","components/GraphqlError/component.tsx","components/GraphqlError/utils/mapErrorCode.ts","../../../src/index.ts"],"names":["config","process","result","possibleTypes","apolloClient","ApolloClient","uri","cache","InMemoryCache","introspection","credentials","connectToDevTools","GraphqlApiProvider","props","children","client","authenticateUser","a","authUri","fetch","method","API_AUTH_CONTEXT","createContext","undefined","ApiAuthProvider","useState","authenticated","loading","error","state","setState","doAuth","useCallback","ok","Error","useEffect","Provider","value","themes","classic","colors","background","spacings","abs4","abs8","abs12","abs16","abs24","abs32","abs40","abs48","themeContext","ApplicationThemeProvider","defaultTheme","themeName","setThemeName","theme","name","I18NEXT_CONTEXT","I18nextProvider","fallbackLanguage","languages","ready","loadI18n","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","whitelist","react","wait","debug","returnEmptyString","returnObjects","useAppReady","context","useContext","useApiAuth","apiAuthLoading","apiAuthError","useI18nextConfig","i18nLoading","i18nError","CreateLobby","history","useHistory","useCreateLobbyMutation","createLobbyMutation","createLobbyMutationLoading","createLobbyMutationError","onCreateLobby","variables","input","userName","push","disabled","onClick","message","GoToLobby","lobby","members","length","to","Wrapper","styled","div","HomePage","t","useTranslation","useHomePageQuery","data","Loader","GraphqlError","viewer","LobbyPage","lazy","LazyRoute","fallback","Routes","exact","path","Root","App","console","ReactDOM","render","StrictMode","document","getElementById","LobbyFragmentFragmentDoc","gql","CreateLobbyDocument","baseOptions","Apollo","JoinLobbyDocument","useJoinLobbyMutation","LeaveLobbyDocument","useLeaveLobbyMutation","HomePageDocument","LobbyJoinPageDocument","useLobbyJoinPageQuery","LobbyPageDocument","useLobbyPageQuery","GraphQLError","errorMessage","extensions","code","ErrorCode","USER_ALREADY_IN_LOBBY","mapErrorCode"],"mappings":"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","file":"static/js/main.1acc8b05.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ErrorCode = void 0;\nvar ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[\"LOBBY_NOT_FOUND\"] = \"LOBBY_NOT_FOUND\";\n    ErrorCode[\"USER_ALREADY_IN_LOBBY\"] = \"USER_ALREADY_IN_LOBBY\";\n})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));\n//# sourceMappingURL=ErrorCode.js.map","function getNodeEnv() {\n  switch (process.env.NODE_ENV) {\n    case 'production':\n      return 'production';\n    case 'test':\n      return 'test';\n    default:\n      return 'development';\n  }\n}\n\nexport const config = {\n  API_URI: process.env.REACT_APP_API_URI || 'http://localhost:8080',\n  NODE_ENV: getNodeEnv(),\n} as const;\n","export interface PossibleTypesResultData {\n  possibleTypes: {\n    [key: string]: string[];\n  };\n}\nconst result: PossibleTypesResultData = {\n  possibleTypes: {},\n};\nexport default result;\n","import { ApolloClient, ApolloProvider, InMemoryCache } from '@apollo/client';\nimport React, { FC } from 'react';\n\nimport { config } from '../config';\n\nimport introspection from './codegenPossibleTypes';\n\nconst apolloClient = new ApolloClient({\n  uri: `${config.API_URI}/api/graphql`,\n  cache: new InMemoryCache({ possibleTypes: introspection.possibleTypes }),\n  credentials: 'include',\n  connectToDevTools: config.NODE_ENV === 'development',\n});\n\nconst GraphqlApiProvider: FC = (props) => {\n  const { children } = props;\n\n  return <ApolloProvider client={apolloClient}>{children}</ApolloProvider>;\n};\n\nexport default GraphqlApiProvider;\n","import { config } from '../../config';\n\nexport async function authenticateUser() {\n  const authUri = `${config.API_URI}/api/auth/authenticate`;\n  return fetch(authUri, { method: 'POST', credentials: 'include' });\n}\n","import React, {\n  createContext,\n  FC,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { authenticateUser } from './utils';\n\n//\n// Context\n//\ninterface Context {\n  loading: boolean;\n  error?: Error;\n}\n\nconst API_AUTH_CONTEXT = createContext<Context | undefined>(undefined);\n\n//\n// Provider\n//\ninterface State {\n  authenticated: boolean;\n  loading: boolean;\n  error?: Error;\n}\n\nexport const ApiAuthProvider: FC = (props) => {\n  const { children } = props;\n\n  const [state, setState] = useState<State>({\n    authenticated: false,\n    loading: true,\n    error: undefined,\n  });\n\n  const doAuth = useCallback(async () => {\n    try {\n      const response = await authenticateUser();\n      if (!response.ok) {\n        setState({\n          authenticated: false,\n          loading: false,\n          error: new Error('Auth failed'),\n        });\n        return;\n      }\n\n      setState({\n        authenticated: true,\n        loading: false,\n        error: undefined,\n      });\n    } catch (err) {\n      setState({\n        authenticated: false,\n        loading: false,\n        error: err,\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (state.authenticated || state.error) {\n      return;\n    }\n    doAuth();\n  }, [state, doAuth]);\n\n  return (\n    <API_AUTH_CONTEXT.Provider\n      value={{ loading: state.loading, error: state.error }}\n    >\n      {children}\n    </API_AUTH_CONTEXT.Provider>\n  );\n};\n\n//\n// Hook\n//\ninterface HookResponse {\n  loading: boolean;\n  error?: Error;\n}\n\nexport function useApiAuth(): HookResponse {\n  const context = useContext(API_AUTH_CONTEXT);\n  if (!context) {\n    throw new Error('Missing wrapping ApiAuthProvider');\n  }\n\n  const { loading, error } = context;\n\n  return {\n    loading,\n    error,\n  };\n}\n","import { DefaultTheme } from 'styled-components';\n\ninterface Colors {\n  background: string;\n}\n\nconst spacings = {\n  abs4: '4px',\n  abs8: '8px',\n  abs12: '12px',\n  abs16: '16px',\n  abs24: '24px',\n  abs32: '32px',\n  abs40: '40px',\n  abs48: '48px',\n} as const;\ntype Spacings = typeof spacings;\n\n// Override DefaultTheme types to provide nice typings in templates\ndeclare module 'styled-components' {\n  export interface DefaultTheme {\n    colors: Colors;\n    spacings: Spacings;\n  }\n}\n\nconst themeClassic: DefaultTheme = {\n  colors: {\n    background: 'lightblue',\n  },\n  spacings,\n};\n\nexport const themes = {\n  classic: themeClassic,\n};\n\nexport type ThemeKey = keyof typeof themes;\n","import React, { createContext, FC, useContext, useState } from 'react';\nimport { DefaultTheme, ThemeProvider } from 'styled-components';\n\nimport { ThemeKey, themes } from '../../styles/themes';\n\n//\n// Theme context\n//\ntype ThemeContext = [\n  { name: ThemeKey; theme: DefaultTheme },\n  (themeKey: ThemeKey) => void,\n];\n\nconst themeContext = createContext<ThemeContext | undefined>(undefined);\n\n//\n// Theme provider\n//\ninterface ProviderProps {\n  defaultTheme: ThemeKey;\n}\n\nexport const ApplicationThemeProvider: FC<ProviderProps> = (props) => {\n  const { defaultTheme, children } = props;\n\n  const [themeName, setThemeName] = useState<ThemeKey>(defaultTheme);\n  const theme = themes[themeName];\n\n  return (\n    <themeContext.Provider value={[{ name: themeName, theme }, setThemeName]}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </themeContext.Provider>\n  );\n};\n\n//\n// Theme consumer\n//\nexport function useApplicationTheme(): ThemeContext {\n  const applicationTheme = useContext(themeContext);\n  if (!applicationTheme) {\n    throw new Error('Missing wrapping ApplicationThemeProvider');\n  }\n\n  return applicationTheme;\n}\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Backend from 'i18next-http-backend';\nimport React, {\n  createContext,\n  FC,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { initReactI18next } from 'react-i18next';\n\n//\n// Context\n//\ninterface Context {\n  loading: boolean;\n  error?: Error;\n  languages: string[];\n}\n\nconst I18NEXT_CONTEXT = createContext<Context | undefined>(undefined);\n\n//\n// Provider\n//\ninterface Props {\n  fallbackLanguage: string;\n  languages: string[];\n}\n\ninterface State {\n  loading: boolean;\n  ready: boolean;\n  error?: Error;\n}\n\nexport const I18nextProvider: FC<Props> = (props) => {\n  const { children, fallbackLanguage, languages } = props;\n\n  const [state, setState] = useState<State>({\n    loading: true,\n    ready: false,\n    error: undefined,\n  });\n\n  const loadI18n = useCallback(async () => {\n    try {\n      await i18n\n        .use(Backend)\n        .use(LanguageDetector)\n        .use(initReactI18next)\n        .init({\n          fallbackLng: fallbackLanguage,\n          whitelist: languages,\n          react: { wait: true },\n          debug: false,\n          returnEmptyString: false,\n          returnObjects: true,\n        });\n      setState({\n        ready: true,\n        loading: false,\n        error: undefined,\n      });\n    } catch (err) {\n      setState({\n        ready: false,\n        loading: false,\n        error: err,\n      });\n    }\n  }, [fallbackLanguage, languages]);\n\n  useEffect(() => {\n    if (state.ready || state.error) {\n      return;\n    }\n    loadI18n();\n  }, [state, loadI18n]);\n\n  return (\n    <I18NEXT_CONTEXT.Provider\n      value={{ loading: state.loading, error: state.error, languages }}\n    >\n      {children}\n    </I18NEXT_CONTEXT.Provider>\n  );\n};\n\n//\n// Hook\n//\ninterface HookResponse {\n  loading: boolean;\n  error?: Error;\n  languages: string[];\n}\n\nexport function useI18nextConfig(): HookResponse {\n  const context = useContext(I18NEXT_CONTEXT);\n  if (!context) {\n    throw new Error('Missing wrapping I18nextProvider');\n  }\n\n  const { loading, error, languages } = context;\n\n  return {\n    loading,\n    error,\n    languages,\n  };\n}\n","import { useApiAuth } from '../hooks/ApiAuthentication';\nimport { useI18nextConfig } from '../hooks/i18next/hook';\n\ninterface HookResponse {\n  loading: boolean;\n  error?: Error;\n}\n\nexport function useAppReady(): HookResponse {\n  const { loading: apiAuthLoading, error: apiAuthError } = useApiAuth();\n  const { loading: i18nLoading, error: i18nError } = useI18nextConfig();\n\n  const loading = apiAuthLoading || i18nLoading;\n  const error = apiAuthError || i18nError;\n\n  return { loading, error };\n}\n","import React, { FC } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useCreateLobbyMutation } from '../../../../graphql/codegen';\n\nconst CreateLobby: FC = () => {\n  const history = useHistory();\n\n  const [\n    createLobbyMutation,\n    { loading: createLobbyMutationLoading, error: createLobbyMutationError },\n  ] = useCreateLobbyMutation();\n\n  const onCreateLobby = async () => {\n    try {\n      await createLobbyMutation({\n        variables: {\n          input: {\n            userName: 'Adam',\n          },\n        },\n      });\n      history.push('/lobby');\n    } catch (_err) {} // Error is handled by component\n  };\n\n  return (\n    <div>\n      <p>Create Lobby</p>\n\n      <br />\n      <p>TODO: choose your avatar</p>\n\n      <p>TODO: choose your name</p>\n\n      <br />\n      <button disabled={createLobbyMutationLoading} onClick={onCreateLobby}>\n        New lobby\n      </button>\n      {!createLobbyMutationError ? null : (\n        <p>{createLobbyMutationError.message}</p>\n      )}\n    </div>\n  );\n};\n\nexport default CreateLobby;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Lobby } from '../../../../graphql/codegen';\n\ninterface Props {\n  lobby: Lobby;\n}\n\nconst GoToLobby: FC<Props> = (props) => {\n  const { lobby } = props;\n\n  return (\n    <div>\n      <p>You already are in a lobby</p>\n\n      <p>Nb members: {lobby.members.length}</p>\n\n      <Link to=\"/lobby\">Go to Lobby</Link>\n    </div>\n  );\n};\n\nexport default GoToLobby;\n","import styled from 'styled-components/macro';\n\nexport const Wrapper = styled.div`\n  flex-grow: 1;\n`;\n","import React, { FC } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { useTranslation } from 'react-i18next';\n\nimport GraphqlError from '../../components/GraphqlError';\nimport Loader from '../../components/Loader';\nimport { useHomePageQuery } from '../../graphql/codegen';\n\nimport CreateLobby from './components/CreateLobby';\nimport GoBackToLobby from './components/GoToLobby';\nimport { Wrapper } from './styles';\n\nconst HomePage: FC = () => {\n  const { t } = useTranslation();\n\n  const { data, loading, error } = useHomePageQuery();\n\n  if (loading) {\n    return <Loader />;\n  }\n  if (error || !data) {\n    return <GraphqlError error={error} />;\n  }\n\n  const { viewer } = data;\n  const { lobby } = viewer;\n\n  return (\n    <Wrapper>\n      <Helmet>\n        <title>{t('metadata.HomePage.title')}</title>\n      </Helmet>\n\n      {!!lobby ? <GoBackToLobby lobby={lobby} /> : <CreateLobby />}\n    </Wrapper>\n  );\n};\n\nexport default HomePage;\n","import React, { FC, lazy, Suspense } from 'react';\nimport {\n  HashRouter as Router,\n  Redirect,\n  Route,\n  RouteProps,\n  Switch,\n} from 'react-router-dom';\n\nimport Loader from '../components/Loader';\nimport HomePage from '../pages/HomePage';\n\nconst LobbyPage = lazy(() => import('../pages/LobbyPage'));\n\nconst LazyRoute: FC<RouteProps> = ({ children, ...props }) => {\n  return (\n    <Route {...props}>\n      <Suspense fallback={<Loader />}>{children}</Suspense>\n    </Route>\n  );\n};\n\nconst Routes: FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePage />\n        </Route>\n\n        <LazyRoute path=\"/lobby\">\n          <LobbyPage />\n        </LazyRoute>\n\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n","import styled from 'styled-components/macro';\n\nexport const Root = styled.div`\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n\n  background-color: ${({ theme }) => theme.colors.background};\n`;\n","import React, { FC } from 'react';\n\nimport Loader from '../components/Loader';\n\nimport { useAppReady } from './hooks';\nimport Routes from './routes';\nimport { Root } from './styles';\n\nconst App: FC = () => {\n  const { loading, error } = useAppReady();\n\n  if (loading) {\n    return (\n      <Root>\n        <Loader />\n      </Root>\n    );\n  }\n\n  if (error) {\n    // eslint-disable-next-line no-console\n    console.error(error);\n    return (\n      <Root>\n        <p>An error occurred while loading the app.</p>\n      </Root>\n    );\n  }\n\n  return (\n    <Root>\n      <Routes />\n    </Root>\n  );\n};\n\nexport default App;\n","import React, { FC } from 'react';\nimport { HelmetProvider } from 'react-helmet-async';\n\nimport GraphqlApiProvider from '../graphql/GraphqlApiProvider';\nimport { ApiAuthProvider } from '../hooks/ApiAuthentication';\nimport { ApplicationThemeProvider } from '../hooks/ApplicationTheme';\nimport { I18nextProvider } from '../hooks/i18next';\n\nimport AppComponent from './component';\n\nconst App: FC = () => {\n  return (\n    <HelmetProvider>\n      <GraphqlApiProvider>\n        <ApplicationThemeProvider defaultTheme=\"classic\">\n          <I18nextProvider languages={['en', 'fr']} fallbackLanguage=\"en\">\n            <ApiAuthProvider>\n              <AppComponent />\n            </ApiAuthProvider>\n          </I18nextProvider>\n        </ApplicationThemeProvider>\n      </GraphqlApiProvider>\n    </HelmetProvider>\n  );\n};\n\nexport default App;\n","import 'reset-css';\nimport './styles/global.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import React, { FC } from 'react';\n\nconst Loader: FC = () => {\n  return <p>Loading...</p>;\n};\n\nexport default Loader;\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = {\n  [K in keyof T]: T[K];\n};\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type CreateLobbyInput = {\n  userName: Scalars['String'];\n};\n\nexport type JoinLobbyInput = {\n  lobbyId: Scalars['String'];\n  userName: Scalars['String'];\n};\n\nexport type Lobby = {\n  __typename?: 'Lobby';\n  id: Scalars['ID'];\n  members: Array<LobbyMember>;\n};\n\nexport type LobbyMember = {\n  __typename?: 'LobbyMember';\n  id: Scalars['ID'];\n  name: Scalars['String'];\n  role: Scalars['String'];\n};\n\nexport type LobbyPreview = {\n  __typename?: 'LobbyPreview';\n  id: Scalars['ID'];\n  nbMembers: Scalars['Int'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  createLobby: Viewer;\n  joinLobby: Viewer;\n  leaveLobby: Viewer;\n};\n\nexport type MutationCreateLobbyArgs = {\n  input: CreateLobbyInput;\n};\n\nexport type MutationJoinLobbyArgs = {\n  input: JoinLobbyInput;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  lobbyPreview?: Maybe<LobbyPreview>;\n  viewer: Viewer;\n};\n\nexport type QueryLobbyPreviewArgs = {\n  lobbyId: Scalars['String'];\n};\n\nexport type Viewer = {\n  __typename?: 'Viewer';\n  id: Scalars['ID'];\n  lobby?: Maybe<Lobby>;\n};\n\nexport type LobbyFragmentFragment = { __typename?: 'Lobby' } & Pick<\n  Lobby,\n  'id'\n> & {\n    members: Array<\n      { __typename?: 'LobbyMember' } & Pick<LobbyMember, 'id' | 'name' | 'role'>\n    >;\n  };\n\nexport type CreateLobbyMutationVariables = Exact<{\n  input: CreateLobbyInput;\n}>;\n\nexport type CreateLobbyMutation = { __typename?: 'Mutation' } & {\n  createLobby: { __typename?: 'Viewer' } & Pick<Viewer, 'id'> & {\n      lobby?: Maybe<{ __typename?: 'Lobby' } & LobbyFragmentFragment>;\n    };\n};\n\nexport type JoinLobbyMutationVariables = Exact<{\n  input: JoinLobbyInput;\n}>;\n\nexport type JoinLobbyMutation = { __typename?: 'Mutation' } & {\n  joinLobby: { __typename?: 'Viewer' } & Pick<Viewer, 'id'> & {\n      lobby?: Maybe<{ __typename?: 'Lobby' } & LobbyFragmentFragment>;\n    };\n};\n\nexport type LeaveLobbyMutationVariables = Exact<{ [key: string]: never }>;\n\nexport type LeaveLobbyMutation = { __typename?: 'Mutation' } & {\n  leaveLobby: { __typename?: 'Viewer' } & Pick<Viewer, 'id'> & {\n      lobby?: Maybe<{ __typename?: 'Lobby' } & LobbyFragmentFragment>;\n    };\n};\n\nexport type HomePageQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type HomePageQuery = { __typename?: 'Query' } & {\n  viewer: { __typename?: 'Viewer' } & Pick<Viewer, 'id'> & {\n      lobby?: Maybe<{ __typename?: 'Lobby' } & LobbyFragmentFragment>;\n    };\n};\n\nexport type LobbyJoinPageQueryVariables = Exact<{\n  lobbyId: Scalars['String'];\n}>;\n\nexport type LobbyJoinPageQuery = { __typename?: 'Query' } & {\n  lobbyPreview?: Maybe<\n    { __typename?: 'LobbyPreview' } & Pick<LobbyPreview, 'id' | 'nbMembers'>\n  >;\n  viewer: { __typename?: 'Viewer' } & Pick<Viewer, 'id'> & {\n      lobby?: Maybe<{ __typename?: 'Lobby' } & LobbyFragmentFragment>;\n    };\n};\n\nexport type LobbyPageQueryVariables = Exact<{ [key: string]: never }>;\n\nexport type LobbyPageQuery = { __typename?: 'Query' } & {\n  viewer: { __typename?: 'Viewer' } & Pick<Viewer, 'id'> & {\n      lobby?: Maybe<{ __typename?: 'Lobby' } & LobbyFragmentFragment>;\n    };\n};\n\nexport const LobbyFragmentFragmentDoc = gql`\n  fragment LobbyFragment on Lobby {\n    id\n    members {\n      id\n      name\n      role\n    }\n  }\n`;\nexport const CreateLobbyDocument = gql`\n  mutation CreateLobby($input: CreateLobbyInput!) {\n    createLobby(input: $input) {\n      id\n      lobby {\n        ...LobbyFragment\n      }\n    }\n  }\n  ${LobbyFragmentFragmentDoc}\n`;\nexport type CreateLobbyMutationFn = Apollo.MutationFunction<\n  CreateLobbyMutation,\n  CreateLobbyMutationVariables\n>;\n\n/**\n * __useCreateLobbyMutation__\n *\n * To run a mutation, you first call `useCreateLobbyMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCreateLobbyMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [createLobbyMutation, { data, loading, error }] = useCreateLobbyMutation({\n *   variables: {\n *      input: // value for 'input'\n *   },\n * });\n */\nexport function useCreateLobbyMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    CreateLobbyMutation,\n    CreateLobbyMutationVariables\n  >,\n) {\n  return Apollo.useMutation<CreateLobbyMutation, CreateLobbyMutationVariables>(\n    CreateLobbyDocument,\n    baseOptions,\n  );\n}\nexport type CreateLobbyMutationHookResult = ReturnType<\n  typeof useCreateLobbyMutation\n>;\nexport type CreateLobbyMutationResult = Apollo.MutationResult<CreateLobbyMutation>;\nexport type CreateLobbyMutationOptions = Apollo.BaseMutationOptions<\n  CreateLobbyMutation,\n  CreateLobbyMutationVariables\n>;\nexport const JoinLobbyDocument = gql`\n  mutation JoinLobby($input: JoinLobbyInput!) {\n    joinLobby(input: $input) {\n      id\n      lobby {\n        ...LobbyFragment\n      }\n    }\n  }\n  ${LobbyFragmentFragmentDoc}\n`;\nexport type JoinLobbyMutationFn = Apollo.MutationFunction<\n  JoinLobbyMutation,\n  JoinLobbyMutationVariables\n>;\n\n/**\n * __useJoinLobbyMutation__\n *\n * To run a mutation, you first call `useJoinLobbyMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useJoinLobbyMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [joinLobbyMutation, { data, loading, error }] = useJoinLobbyMutation({\n *   variables: {\n *      input: // value for 'input'\n *   },\n * });\n */\nexport function useJoinLobbyMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    JoinLobbyMutation,\n    JoinLobbyMutationVariables\n  >,\n) {\n  return Apollo.useMutation<JoinLobbyMutation, JoinLobbyMutationVariables>(\n    JoinLobbyDocument,\n    baseOptions,\n  );\n}\nexport type JoinLobbyMutationHookResult = ReturnType<\n  typeof useJoinLobbyMutation\n>;\nexport type JoinLobbyMutationResult = Apollo.MutationResult<JoinLobbyMutation>;\nexport type JoinLobbyMutationOptions = Apollo.BaseMutationOptions<\n  JoinLobbyMutation,\n  JoinLobbyMutationVariables\n>;\nexport const LeaveLobbyDocument = gql`\n  mutation LeaveLobby {\n    leaveLobby {\n      id\n      lobby {\n        ...LobbyFragment\n      }\n    }\n  }\n  ${LobbyFragmentFragmentDoc}\n`;\nexport type LeaveLobbyMutationFn = Apollo.MutationFunction<\n  LeaveLobbyMutation,\n  LeaveLobbyMutationVariables\n>;\n\n/**\n * __useLeaveLobbyMutation__\n *\n * To run a mutation, you first call `useLeaveLobbyMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLeaveLobbyMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [leaveLobbyMutation, { data, loading, error }] = useLeaveLobbyMutation({\n *   variables: {\n *   },\n * });\n */\nexport function useLeaveLobbyMutation(\n  baseOptions?: Apollo.MutationHookOptions<\n    LeaveLobbyMutation,\n    LeaveLobbyMutationVariables\n  >,\n) {\n  return Apollo.useMutation<LeaveLobbyMutation, LeaveLobbyMutationVariables>(\n    LeaveLobbyDocument,\n    baseOptions,\n  );\n}\nexport type LeaveLobbyMutationHookResult = ReturnType<\n  typeof useLeaveLobbyMutation\n>;\nexport type LeaveLobbyMutationResult = Apollo.MutationResult<LeaveLobbyMutation>;\nexport type LeaveLobbyMutationOptions = Apollo.BaseMutationOptions<\n  LeaveLobbyMutation,\n  LeaveLobbyMutationVariables\n>;\nexport const HomePageDocument = gql`\n  query HomePage {\n    viewer {\n      id\n      lobby {\n        ...LobbyFragment\n      }\n    }\n  }\n  ${LobbyFragmentFragmentDoc}\n`;\n\n/**\n * __useHomePageQuery__\n *\n * To run a query within a React component, call `useHomePageQuery` and pass it any options that fit your needs.\n * When your component renders, `useHomePageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useHomePageQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useHomePageQuery(\n  baseOptions?: Apollo.QueryHookOptions<HomePageQuery, HomePageQueryVariables>,\n) {\n  return Apollo.useQuery<HomePageQuery, HomePageQueryVariables>(\n    HomePageDocument,\n    baseOptions,\n  );\n}\nexport function useHomePageLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    HomePageQuery,\n    HomePageQueryVariables\n  >,\n) {\n  return Apollo.useLazyQuery<HomePageQuery, HomePageQueryVariables>(\n    HomePageDocument,\n    baseOptions,\n  );\n}\nexport type HomePageQueryHookResult = ReturnType<typeof useHomePageQuery>;\nexport type HomePageLazyQueryHookResult = ReturnType<\n  typeof useHomePageLazyQuery\n>;\nexport type HomePageQueryResult = Apollo.QueryResult<\n  HomePageQuery,\n  HomePageQueryVariables\n>;\nexport const LobbyJoinPageDocument = gql`\n  query LobbyJoinPage($lobbyId: String!) {\n    lobbyPreview(lobbyId: $lobbyId) {\n      id\n      nbMembers\n    }\n    viewer {\n      id\n      lobby {\n        ...LobbyFragment\n      }\n    }\n  }\n  ${LobbyFragmentFragmentDoc}\n`;\n\n/**\n * __useLobbyJoinPageQuery__\n *\n * To run a query within a React component, call `useLobbyJoinPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useLobbyJoinPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLobbyJoinPageQuery({\n *   variables: {\n *      lobbyId: // value for 'lobbyId'\n *   },\n * });\n */\nexport function useLobbyJoinPageQuery(\n  baseOptions: Apollo.QueryHookOptions<\n    LobbyJoinPageQuery,\n    LobbyJoinPageQueryVariables\n  >,\n) {\n  return Apollo.useQuery<LobbyJoinPageQuery, LobbyJoinPageQueryVariables>(\n    LobbyJoinPageDocument,\n    baseOptions,\n  );\n}\nexport function useLobbyJoinPageLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    LobbyJoinPageQuery,\n    LobbyJoinPageQueryVariables\n  >,\n) {\n  return Apollo.useLazyQuery<LobbyJoinPageQuery, LobbyJoinPageQueryVariables>(\n    LobbyJoinPageDocument,\n    baseOptions,\n  );\n}\nexport type LobbyJoinPageQueryHookResult = ReturnType<\n  typeof useLobbyJoinPageQuery\n>;\nexport type LobbyJoinPageLazyQueryHookResult = ReturnType<\n  typeof useLobbyJoinPageLazyQuery\n>;\nexport type LobbyJoinPageQueryResult = Apollo.QueryResult<\n  LobbyJoinPageQuery,\n  LobbyJoinPageQueryVariables\n>;\nexport const LobbyPageDocument = gql`\n  query LobbyPage {\n    viewer {\n      id\n      lobby {\n        ...LobbyFragment\n      }\n    }\n  }\n  ${LobbyFragmentFragmentDoc}\n`;\n\n/**\n * __useLobbyPageQuery__\n *\n * To run a query within a React component, call `useLobbyPageQuery` and pass it any options that fit your needs.\n * When your component renders, `useLobbyPageQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useLobbyPageQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useLobbyPageQuery(\n  baseOptions?: Apollo.QueryHookOptions<\n    LobbyPageQuery,\n    LobbyPageQueryVariables\n  >,\n) {\n  return Apollo.useQuery<LobbyPageQuery, LobbyPageQueryVariables>(\n    LobbyPageDocument,\n    baseOptions,\n  );\n}\nexport function useLobbyPageLazyQuery(\n  baseOptions?: Apollo.LazyQueryHookOptions<\n    LobbyPageQuery,\n    LobbyPageQueryVariables\n  >,\n) {\n  return Apollo.useLazyQuery<LobbyPageQuery, LobbyPageQueryVariables>(\n    LobbyPageDocument,\n    baseOptions,\n  );\n}\nexport type LobbyPageQueryHookResult = ReturnType<typeof useLobbyPageQuery>;\nexport type LobbyPageLazyQueryHookResult = ReturnType<\n  typeof useLobbyPageLazyQuery\n>;\nexport type LobbyPageQueryResult = Apollo.QueryResult<\n  LobbyPageQuery,\n  LobbyPageQueryVariables\n>;\nexport const namedOperations = {\n  Query: {\n    HomePage: 'HomePage',\n    LobbyJoinPage: 'LobbyJoinPage',\n    LobbyPage: 'LobbyPage',\n  },\n  Mutation: {\n    CreateLobby: 'CreateLobby',\n    JoinLobby: 'JoinLobby',\n    LeaveLobby: 'LeaveLobby',\n  },\n  Fragment: {\n    LobbyFragment: 'LobbyFragment',\n  },\n};\n","import { GraphQLError } from 'graphql';\nimport React, { FC } from 'react';\n\nimport { mapErrorCode } from './utils/mapErrorCode';\n\ninterface Props {\n  error?: GraphQLError | Error;\n}\n\nconst GraphqlError: FC<Props> = (props) => {\n  const { error } = props;\n\n  if (error instanceof GraphQLError) {\n    const errorMessage = mapErrorCode(error);\n    if (errorMessage) {\n      return <p>Error: {errorMessage}</p>;\n    }\n  }\n\n  return <p>Error: The operation failed.</p>;\n};\n\nexport default GraphqlError;\n","import { ErrorCode } from '@packages/lib-shared';\nimport { GraphQLError } from 'graphql';\n\nexport function mapErrorCode(error: GraphQLError): string | undefined {\n  const errorCode = error.extensions?.code as ErrorCode | undefined;\n\n  switch (errorCode) {\n    case ErrorCode.USER_ALREADY_IN_LOBBY:\n      return 'User already in lobby';\n    default:\n      return undefined;\n  }\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./ErrorCode\"), exports);\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}