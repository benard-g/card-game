{"version":3,"sources":["pages/Lobby/CreateLobby/component.tsx","pages/Lobby/CreateLobby/container.tsx","pages/Lobby/ViewLobby/component.tsx","pages/Lobby/ViewLobby/container.tsx","pages/Lobby/routes.tsx"],"names":["CreateLobby","history","useHistory","useCreateLobbyPage_CreateLobbyMutation","createLobby","loading","onCreateLobby","useCallback","a","data","lobbyId","lobby","id","replace","disabled","onClick","CreateLobbyPage","useCreateLobbyPageQuery","error","viewer","Loader","GraphqlError","to","ViewLobby","props","t","useTranslation","useViewLobbyPage_LeaveLobbyMutation","leaveLobby","onLeaveLobby","push","ViewLobbyPage","useParams","useViewLobbyPageQuery","useState","undefined","canViewLobby","setCanViewLobby","useEffect","LobbyPage","url","useRouteMatch","path"],"mappings":"kRAmCeA,EA9BS,WACtB,IAAMC,EAAUC,cADY,EAGOC,cAHP,mBAGrBC,EAHqB,KAGNC,EAHM,KAGNA,QAEhBC,EAAgBC,uBAAY,WAChC,sBAAC,kCAAAC,EAAA,sEACwBJ,IADxB,gBACSK,EADT,EACSA,MACFC,EAFP,OAEiBD,QAFjB,IAEiBA,GAFjB,UAEiBA,EAAML,YAAYO,aAFnC,aAEiB,EAAyBC,KAEvCX,EAAQY,QAAR,mBAA4BH,IAJ/B,0CAAD,KAOC,CAACN,EAAaH,IAEjB,OACE,gCACE,8CAEA,uBACA,uBACA,uBAEA,wBAAQa,SAAUT,EAASU,QAAST,EAApC,oCCkBSU,EApCa,WAAO,IAAD,EACCC,cAAzBR,EADwB,EACxBA,KAAMJ,EADkB,EAClBA,QAASa,EADS,EACTA,MACjBP,EAAK,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAMU,OAAOR,MAE3B,OAAIN,EACK,cAACe,EAAA,EAAD,IAELF,IAAUT,EACL,cAACY,EAAA,EAAD,CAAcH,MAAOA,IAI5B,qCACE,cAAC,IAAD,UACE,qEAGCP,EACD,gCACE,4DAEA,uBACA,uBACA,uBAEA,cAAC,IAAD,CAAMW,GAAE,mBAAcX,EAAMC,IAAMC,SAAO,EAAzC,4BAKF,cAAC,EAAD,Q,SCKOU,EAhCc,SAACC,GAAW,IAC/Bb,EAAUa,EAAVb,MAEAc,EAAMC,cAAND,EACFxB,EAAUC,cAJsB,EAMJyB,cANI,mBAM/BC,EAN+B,KAMjBvB,EANiB,KAMjBA,QAEfwB,EAAetB,uBAAY,WAC/B,sBAAC,sBAAAC,EAAA,sEACOoB,IADP,OAEC3B,EAAQ6B,KAAK,KAFd,0CAAD,KAIC,CAAC7B,EAAS2B,IAEb,OACE,gCACE,6BAAKH,EAAE,mCAEP,uBACA,uBACA,uBAEA,uCAAUd,EAAMC,MAEhB,wBAAQE,SAAUT,EAASU,QAASc,EAApC,6BCoBSE,EA5CW,WAAO,IACvBnB,EAAOoB,cAAPpB,GADsB,EAGGqB,cAAzBxB,EAHsB,EAGtBA,KAAMJ,EAHgB,EAGhBA,QAASa,EAHO,EAGPA,MAHO,EAKUgB,wBACtCC,GAN4B,mBAKvBC,EALuB,KAKTC,EALS,KAgB9B,OAPAC,qBAAU,WACR,IAAKjC,GAAWI,EAAM,CAAC,IACbE,EAAUF,EAAKU,OAAfR,MACR0B,GAAqB,OAAL1B,QAAK,IAALA,OAAA,EAAAA,EAAOC,MAAOA,MAE/B,CAACP,EAASI,EAAMG,IAEfP,EACK,cAACe,EAAA,EAAD,IAELF,IAAUT,EACL,cAACY,EAAA,EAAD,CAAcH,MAAOA,SAETiB,IAAjBC,EACK,cAAChB,EAAA,EAAD,IAIP,qCACE,cAAC,IAAD,UACE,iDAAoBR,OAGpBwB,GAAiB3B,EAAKU,OAAOR,MAM7B,cAAC,EAAD,CAAWA,MAAOF,EAAKU,OAAOR,QAL9B,gCACE,uCAAUC,EAAV,qBACA,cAAC,IAAD,CAAMU,GAAG,IAAT,+BCvBKiB,EApBO,WAAO,IACnBC,EAAQC,cAARD,IAER,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,KAAI,UAAKF,EAAL,WAAX,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOE,KAAI,UAAKF,EAAL,QAAX,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOE,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUpB,GAAG","file":"static/js/3.6e1cf674.chunk.js","sourcesContent":["import React, { FC, useCallback } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { useCreateLobbyPage_CreateLobbyMutation } from '../../../services/graphql/generated';\n\nconst CreateLobby: FC = () => {\n  const history = useHistory();\n\n  const [createLobby, { loading }] = useCreateLobbyPage_CreateLobbyMutation();\n\n  const onCreateLobby = useCallback(() => {\n    (async () => {\n      const { data } = await createLobby();\n      const lobbyId = data?.createLobby.lobby?.id;\n      if (lobbyId) {\n        history.replace(`/lobbies/${lobbyId}`);\n      }\n    })();\n  }, [createLobby, history]);\n\n  return (\n    <div>\n      <h1>Create lobby</h1>\n\n      <br />\n      <br />\n      <br />\n\n      <button disabled={loading} onClick={onCreateLobby}>\n        Create a new lobby\n      </button>\n    </div>\n  );\n};\n\nexport default CreateLobby;\n","import React, { FC } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link } from 'react-router-dom';\n\nimport GraphqlError from '../../../components/GraphqlError';\nimport Loader from '../../../components/Loader';\nimport { useCreateLobbyPageQuery } from '../../../services/graphql/generated';\n\nimport CreateLobby from './component';\n\nconst CreateLobbyPage: FC = () => {\n  const { data, loading, error } = useCreateLobbyPageQuery();\n  const lobby = data?.viewer.lobby;\n\n  if (loading) {\n    return <Loader />;\n  }\n  if (error || !data) {\n    return <GraphqlError error={error} />;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Card game - Create a new Lobby</title>\n      </Helmet>\n\n      {!!lobby ? (\n        <div>\n          <p>You already are in a lobby.</p>\n\n          <br />\n          <br />\n          <br />\n\n          <Link to={`/lobbies/${lobby.id}`} replace>\n            Go to lobby\n          </Link>\n        </div>\n      ) : (\n        <CreateLobby />\n      )}\n    </>\n  );\n};\n\nexport default CreateLobbyPage;\n","import React, { FC, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Lobby,\n  useViewLobbyPage_LeaveLobbyMutation,\n} from '../../../services/graphql/generated';\n\ninterface Props {\n  lobby: Lobby;\n}\n\nconst ViewLobby: FC<Props> = (props) => {\n  const { lobby } = props;\n\n  const { t } = useTranslation();\n  const history = useHistory();\n\n  const [leaveLobby, { loading }] = useViewLobbyPage_LeaveLobbyMutation();\n\n  const onLeaveLobby = useCallback(() => {\n    (async () => {\n      await leaveLobby();\n      history.push('/');\n    })();\n  }, [history, leaveLobby]);\n\n  return (\n    <div>\n      <h1>{t('pages.Lobby.CreateLobby.title')}</h1>\n\n      <br />\n      <br />\n      <br />\n\n      <p>Code: {lobby.id}</p>\n\n      <button disabled={loading} onClick={onLeaveLobby}>\n        Leave lobby\n      </button>\n    </div>\n  );\n};\n\nexport default ViewLobby;\n","import React, { FC, useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Link, useParams } from 'react-router-dom';\n\nimport GraphqlError from '../../../components/GraphqlError';\nimport Loader from '../../../components/Loader';\nimport { useViewLobbyPageQuery } from '../../../services/graphql/generated';\n\nimport ViewLobby from './component';\n\ninterface RouteParams {\n  id: string;\n}\n\nconst ViewLobbyPage: FC = () => {\n  const { id } = useParams<RouteParams>();\n\n  const { data, loading, error } = useViewLobbyPageQuery();\n\n  const [canViewLobby, setCanViewLobby] = useState<boolean | undefined>(\n    undefined,\n  );\n\n  useEffect(() => {\n    if (!loading && data) {\n      const { lobby } = data.viewer;\n      setCanViewLobby(lobby?.id === id);\n    }\n  }, [loading, data, id]);\n\n  if (loading) {\n    return <Loader />;\n  }\n  if (error || !data) {\n    return <GraphqlError error={error} />;\n  }\n  if (canViewLobby === undefined) {\n    return <Loader />;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Card game - {id}</title>\n      </Helmet>\n\n      {!canViewLobby || !data.viewer.lobby ? (\n        <div>\n          <p>Lobby {id} not accessible</p>\n          <Link to=\"/\">Go to home</Link>\n        </div>\n      ) : (\n        <ViewLobby lobby={data.viewer.lobby} />\n      )}\n    </>\n  );\n};\n\nexport default ViewLobbyPage;\n","import React, { FC } from 'react';\nimport { Redirect, Route, Switch, useRouteMatch } from 'react-router-dom';\n\nimport CreateLobbyPage from './CreateLobby';\nimport ViewLobbyPage from './ViewLobby';\n\nconst LobbyPage: FC = () => {\n  const { url } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Route path={`${url}/create`}>\n        <CreateLobbyPage />\n      </Route>\n\n      <Route path={`${url}/:id`}>\n        <ViewLobbyPage />\n      </Route>\n\n      <Route path=\"*\">\n        <Redirect to=\"/\" />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default LobbyPage;\n"],"sourceRoot":""}